//
//  PersonalCenterViewController.m
//  YYDoctor
//
//  Created by apple on 15/10/21.
//  Copyright © 2015年 Guangdong ZSGR Technologies Co., Ltd. All rights reserved.
//

#import "PersonalCenterController.h"
#import "ConsultationBillController.h"
#import "OpenServiceController.h"
#import "PersonalInformationController.h"
#import "LoginController.h"
#import "DoctorPersonalApiTool.h"
#import "DoctorAccount.h"
#import "SSKeychain.h"
#import "HUDHelper.h"
#import "MessageCenterController.h"
#import "ConsultationBillController.h"
#import "SettingController.h"
#import "OpenServiceController.h"
#import "SettingsController.h"

@interface PersonalCenterController ()
<UITableViewDelegate,UITableViewDataSource>

@property (nonatomic, strong) NSArray *dataSource;
@property (weak, nonatomic) IBOutlet UITableView *tableview;
@property (weak, nonatomic) IBOutlet UILabel *doctorNameLabel;//医生名字
@property (weak, nonatomic) IBOutlet UILabel *doctorPositionLabel;//医生职称
@property (weak, nonatomic) IBOutlet UIImageView *stateImageView;
@property (weak, nonatomic) IBOutlet UIButton *doctorPic;//医生头像
@property (nonatomic, strong) DoctorInformationInfo *info;
@property (nonatomic, strong) NSString *stateOnline;
@end

@implementation PersonalCenterController

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

#pragma mark - tableviewDelegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.dataSource.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath  {
    static NSString *cellID = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID];
    }
    NSDictionary *item = self.dataSource[indexPath.row];
    cell.textLabel.text = item[@"title"];
    cell.imageView.image = [UIImage imageNamed:item[@"image"]];
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    NSInteger row = indexPath.row;
    if (row == 0) {
        MessageCenterController *vc = [self.storyboard instantiateViewControllerWithIdentifier:NSStringFromClass([MessageCenterController class])];
        vc.info = self.info;
        [self.navigationController pushViewController:vc animated:YES];
    }else if (row == 1) {
        ConsultationBillController *vc = [self.storyboard instantiateViewControllerWithIdentifier:NSStringFromClass([ConsultationBillController class])];
        vc.info = self.info;
        [self.navigationController pushViewController:vc animated:YES];
    }else if (row == 2) {
        OpenServiceController *vc = [self.storyboard instantiateViewControllerWithIdentifier:NSStringFromClass([OpenServiceController class])];
        vc.info = self.info;
        [self.navigationController pushViewController:vc animated:YES];
    }else if (row == 3) {
        SettingsController *sc = [self.storyboard instantiateViewControllerWithIdentifier:@"SettingsController"];
        sc.doctorInfo = self.info;
        [self.navigationController pushViewController:sc animated:YES];
//        SettingController *vc = [self.storyboard instantiateViewControllerWithIdentifier:NSStringFromClass([SettingController class])];
//        vc.info = self.info;
//        [self.navigationController pushViewController:vc animated:YES];
    }
}

#pragma mark - request
//获取医生个人信息
- (void)requestPersonalInformation {
    [DoctorPersonalApiTool getDoctorDataWithDoctorAccount:[DoctorAccount currentAccount].userAccount success:^(id result) {
        NSDictionary *resultDict = result[@"Result"];
        NSInteger code = [resultDict[@"code"] integerValue];
        if (code == 1) {
            NSDictionary *data = resultDict[@"data"];
            DoctorInformationInfo *info = [[DoctorInformationInfo alloc] initWithDictionary:data];
            self.info = info;
            self.doctorNameLabel.text = info.doctorName;
            self.doctorPositionLabel.text = info.doctorPosition;
            UIImage *image = [UIImage imageNamed:info.doctorPic];
            [self.doctorPic setImage:image forState:UIControlStateNormal];
            DoctorAccount *account = [DoctorAccount currentAccount];
            account.docId = [NSString stringWithFormat:@"%tu",info.docId];
            [DoctorAccount saveCurrentAccount:account];
        }
    } failure:^(NSError *error) {
        
    }];
}
//获取医生在线状态
- (void)getdoctorStateRequest {
    [DoctorPersonalApiTool getDoctorOnlineStateWithDoctorId:[[DoctorAccount currentAccount].docId integerValue] success:^(id result) {
        NSDictionary *dict = result[0];
        self.stateOnline = dict[@"onlineState"];
        if ([self.stateOnline isEqualToString:@"0"]) {
            self.stateImageView.image = [UIImage imageNamed:@"per_offline_icon"];
        }else if ([self.stateOnline isEqualToString:@"1"]){
            self.stateImageView.image = [UIImage imageNamed:@"per_online_icon"];
        }
    } failure:^(NSError *error) {
        
    }];
}

#pragma mark - lifeTime
- (void)viewWillAppear:(BOOL)animated {
    if ([DoctorAccount currentAccount]) {
        [self requestPersonalInformation];
        [self getdoctorStateRequest];
    }else {
        LoginController *lvc = [self.storyboard instantiateViewControllerWithIdentifier:@"LoginController"];
        UINavigationController *nvc = [[UINavigationController alloc] initWithRootViewController:lvc];
        [self.navigationController presentViewController:nvc animated:YES completion:nil];
    }
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.dataSource = @[
            @{@"title":@"消息中心",@"image":@"login2_17"},
            @{@"title":@"咨询账单",@"image":@"login2_21"},
            @{@"title":@"开通服务",@"image":@"login2_24"},
            @{@"title":@"设置",@"image":@"login2_28"}];
    [self.tableview reloadData];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

#pragma mark - IBActions

//点击退出按钮事件
- (IBAction)signOut:(id)sender {
    [DoctorPersonalApiTool loginOutWithSuccess:^(id result) {
        NSInteger code = [result[@"code"] integerValue];
        if (code == 1) {
            NSString *serevive = [[NSBundle mainBundle] bundleIdentifier];
            [SSKeychain deletePasswordForService:serevive account:[DoctorAccount currentAccount].userAccount];
            [DoctorAccount deleteCurrentAccount];
            self.tabBarController.selectedIndex = 0;
            [self.navigationController popViewControllerAnimated:YES];
            //退出环信登录
            EMError *error = nil;
            NSDictionary *info = [[EaseMob sharedInstance].chatManager logoffWithUnbindDeviceToken:YES error:&error];
            if (!error && info) {
                NSLog(@"退出成功");
            }
            [HUDHelper showMessage:@"注销成功"];
        }else {
            [HUDHelper showError:@"注销失败"];
        }
    } failure:^(NSError *error) {
        [HUDHelper showError:@"网络错误"];
    }];
    
}

//点击头像跳转事件
- (IBAction)changePassword:(id)sender {
    PersonalInformationController *pvc = [self.storyboard instantiateViewControllerWithIdentifier:@"PersonalInformationController"];
    pvc.doctorInfo = self.info;
    pvc.doctorState = self.stateOnline;
    [self.navigationController pushViewController:pvc animated:YES];
}


@end
