//
//  SetUpViewController.m
//  YYDoctor
//
//  Created by apple on 15/10/23.
//  Copyright © 2015年 Guangdong ZSGR Technologies Co., Ltd. All rights reserved.
//

#import "SettingController.h"
#import "YYAPIRequest.h"
#import "SettingInfo.h"
#import "SettingDoctorTimeCell.h"
#import "TestHelper.h"
#import "HUDHelper.h"

@interface SettingController ()
<UITableViewDelegate,
UITableViewDataSource,
SettingDoctorTimeCellDelegate,
UITextFieldDelegate>

@property (weak, nonatomic) IBOutlet UIView *footerView;
@property (weak, nonatomic) IBOutlet UISwitch *addSwitch;
@property (weak, nonatomic) IBOutlet UISwitch *regSwitch;
@property (weak, nonatomic) IBOutlet UISwitch *preAppSwitch;
@property (weak, nonatomic) IBOutlet UIView *maskView;
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIButton *timeEditButton;
@property (nonatomic, strong) NSMutableArray *dataArray;
@property (nonatomic, strong) NSString *saveTime;
@property (nonatomic, strong) NSDictionary *timeDictionary;
@property (nonatomic, strong) NSString *timeString;
@property (nonatomic, assign) NSInteger timeRow;
@property (nonatomic, assign) NSInteger timeType;
@property (nonatomic, assign) BOOL isTableViewEding;
@property (nonatomic, assign) BOOL isMaskViewShow;
@property (nonatomic, strong) NSArray *timeArray;

@end

@implementation SettingController

#pragma mark - IBAction

// 保存医生咨询时间设置信息
- (IBAction)timeEditing:(UIButton *)sender {
    if (self.isTableViewEding == NO) {
        [self.tableView setEditing:YES animated:YES];
        [self.timeEditButton setTitle:@"完成" forState:UIControlStateNormal];
        self.isTableViewEding = YES;
        self.footerView.hidden = NO;
        
    }else {
        [self.timeEditButton setTitle:@"编辑" forState:UIControlStateNormal];
        [self.tableView setEditing:NO animated:YES];
        self.isTableViewEding = NO;
        self.footerView.hidden = YES;
//        [self saveDoctorTimeRequest];
    }
}
// 保存医生提醒设置信息
- (IBAction)openAlertSevrece:(UISwitch *)sender {
    switch (sender.tag) {
        case 0:
            [self saveSevreceRequest:@"addAlert" state:sender.isOn];
            break;
        case 1:
            [self saveSevreceRequest:@"regAlert" state:sender.isOn];
            break;
        case 2:
            [self saveSevreceRequest:@"preAppoAlert" state:sender.isOn];
            break;
    }
}
//添加医生咨询时间
- (IBAction)addDoctorTimeClick:(UIButton *)sender {
    self.timeString = [sender titleForState:UIControlStateNormal];
    SettingInfo *info = self.dataArray[self.timeRow];
    if (self.timeType == 1) {
        info.beginTime = self.timeString;
    }else {
        info.endTime = self.timeString;
    }
    NSInteger compareTime = [TestHelper compareDate:info.beginTime AnotherDay:info.endTime];
    //如果数据源只有一条数据，只跟自身开始结束时间比较
    if (self.dataArray.count <= 1) {
        if (compareTime == 0) {
            [HUDHelper showMessage:@"时间段相同，请重新设置"];
        }else if (compareTime == 1) {
            [HUDHelper showMessage:@"时间设置不合理，请重新设置"];
        }else {
            [self.tableView reloadData];
            self.maskView.hidden = YES;
        }
    }else { //如果数据源多于两条数据，先和上一条数据比较，再自身比较
        SettingInfo *LastInfo = self.dataArray[self.timeRow + 1];
        NSInteger cellCompare = [TestHelper compareDate:info.endTime AnotherDay:LastInfo.beginTime];
        if (cellCompare == 1) {
            [HUDHelper showMessage:@"时间段已存在，请重新设置"];
        }else {
            if (compareTime == 0) {
                [HUDHelper showMessage:@"时间段相同，请重新设置"];
            }else if (compareTime == 1) {
                [HUDHelper showMessage:@"时间设置不合理，请重新设置"];
            }else {
                [self.tableView reloadData];
                self.maskView.hidden = YES;
            }
            
        }

    }
}

//添加时间段
- (IBAction)addTime:(UIButton *)sender {
//    self.timeArray = @[@"08:00",@"08:30",@"09:00",@"09:30",@"10:00",@"10:30",@"11:00",@"11:30",@"12:00",@"12:30",@"13:00",@"13:30",@"14:00",@"14:30",@"15:00",@"15:30",@"16:00",@"16:30",@"17:00",@"17:30"];
    SettingInfo *info = [[SettingInfo alloc] init];
    info.beginTime = @"8:00";
    info.endTime = @"8:30";
    info.docId = self.info.docId;
    [self.dataArray addObject:info];
    [self.tableView reloadData];
}

- (NSInteger)configCurrentIndex:(NSString *)time {
    NSInteger result = 0;
    for (NSInteger i = 0; i < self.timeArray.count; i ++) {
        if ([self.timeArray[i] isEqualToString:time]) {
            result = i;
        }
    }
    return result;
}

#pragma mark - settingDoctorTimeCellDelegate

- (void)beginTimeClick:(UIButton *)sender {
    self.maskView.hidden = NO;
    self.timeRow = sender.tag;
    self.timeType = 1;
}

- (void)endTimeClick:(UIButton *)sender {
    self.maskView.hidden = NO;
    self.timeRow = sender.tag;
    self.timeType = 2;
}

#pragma mark - Request

//获取医生提醒设置数据请求
- (void)getSevreceRequest {
    NSString *path = @"alertSet/select";
    [YYAPIRequest GET:path parameters:@{@"docId":@(self.info.docId)} success:^(NSArray *response){
        NSDictionary *settings = response[0];
        NSString *addNumber = settings[@"addAlert"];
        NSString *regNumber = settings[@"regAlert"];
        NSString *preNumber = settings[@"preAppoAlert"];
        if (![addNumber isEqual:[NSNull null]]&&![regNumber isEqual:[NSNull null]]&&![preNumber isEqual:[NSNull null]]) {
            self.addSwitch.on = [addNumber boolValue];
            self.regSwitch.on = [regNumber boolValue];
            self.preAppSwitch.on = [preNumber boolValue];
        }else {
            [HUDHelper showMessage:@"该医生尚未设置咨询时间!"];
        }
    } failure:^(NSError *error) {
        
    }];
}
// 保存医生提醒设置数据请求
- (void)saveSevreceRequest:(NSString *)key state:(BOOL)isOn {
    NSString *path = @"alertSet/";
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    [params setObject:@(self.info.docId) forKey:@"docId"];
    [params setObject:@(isOn) forKey:key];
    [YYAPIRequest POST:path parameters:params success:^(NSDictionary *response) {
        
    } failure:^(NSError *error) {
        
    }];
}
//	获取医生咨询时间设置信息数据请求
- (void)getDoctorTimeRequest {
    NSString *requestPath = @"timeSlot/select";
    [YYAPIRequest GET:requestPath parameters:@{@"docId":@(self.info.docId)} success:^(NSArray *response) {
        [response enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
            if (obj) {
                SettingInfo *info = [[SettingInfo alloc] initWithDictionary:obj];
                [self.dataArray  addObject:info];
                [self.tableView reloadData];
            }else {
                [HUDHelper showMessage:@"该医生尚未设置咨询时间!"];
            }
        }];
    }
    failure:^(NSError *error) {
        
    }];
}

//	保存医生咨询时间设置信息数据请求
- (void)saveDoctorTimeRequest {
    NSString *path = @"timeSlot/set";
    NSDictionary *params = @{
                             @"key1":@{@"docId":@122561,@"bTime":@"08:00",@"eTime":@"09:00"},
                             @"key2":@{@"docId":@122561,@"bTime":@"09:00",@"eTime":@"10:00"},
                             @"key3":@{@"docId":@122561,@"bTime":@"10:00",@"eTime":@"11:00"},
                             @"key4":@{@"docId":@122561,@"bTime":@"11:00",@"eTime":@"12:00"},
                             @"key5":@{@"docId":@122561,@"bTime":@"12:00",@"eTime":@"13:00"},
                             @"key6":@{@"docId":@122561,@"bTime":@"13:00",@"eTime":@"14:00"},
                             @"key7":@{@"docId":@122561,@"bTime":@"14:00",@"eTime":@"15:00"},
                             @"key8":@{@"docId":@122561,@"bTime":@"15:00",@"eTime":@"16:00"},
                             @"key9":@{@"docId":@122561,@"bTime":@"16:00",@"eTime":@"17:00"},
                             @"key10":@{@"docId":@122561,@"bTime":@"17:00",@"eTime":@"18:00"}
                             };

    [YYAPIRequest POST:path parameters:params success:^(NSDictionary *response) {
        
    } failure:^(NSError *error) {
        
    }];
}

#pragma mark - tableViewDelegate

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *cellID = @"SettingDoctorTimeCell";
    SettingDoctorTimeCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    SettingInfo *info = self.dataArray[indexPath.row];
    cell.delegate = self;
    [cell.beginTimeButton setTitle:info.beginTime forState:UIControlStateNormal];
    cell.beginTimeButton.tag = indexPath.row;
    [cell.endTimeButton setTitle:info.endTime forState:UIControlStateNormal];
    cell.endTimeButton.tag = indexPath.row;
//    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    NSLog(@"选中cell");
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    return YES;
}

- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath {
    return @"删除";
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath {
    return UITableViewCellEditingStyleDelete;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (editingStyle == UITableViewCellEditingStyleDelete ) {
        [self.dataArray removeObjectAtIndex:indexPath.row];
        [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationTop];
    }
}

#pragma mark - lifetime

- (void)viewWillAppear:(BOOL)animated {
    [self getSevreceRequest];
    [self getDoctorTimeRequest];
    self.isTableViewEding = NO;
    self.maskView.hidden = YES;
    self.isMaskViewShow = NO;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.dataArray = [NSMutableArray array];
    self.tableView.allowsSelectionDuringEditing = YES;
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(hide:)];
    [self.view addGestureRecognizer:tap];
}

- (void)hide:(UITapGestureRecognizer *)gesture {
    self.maskView.hidden = YES;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}


@end
